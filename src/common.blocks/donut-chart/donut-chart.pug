mixin donut-chart(customConfig = {})
  - let blocks = require('@plugins/blocks.js');
  - let defaultConfig = require('@blocks/donut-chart/donut-chart.config.json');
  - let config = blocks.createConfig(defaultConfig, customConfig);

  .donut-chart
    svg.donut-chart__svg(width="100%", height="100%", viewBox="0 0 34 34")
      defs
        linearGradient(id="gradient1")
          stop(stop-color="#919191" offset="0%")
          stop(stop-color="#3D4975" offset="100%")
        linearGradient(id="gradient2")
          stop(stop-color="#BC9CFF" offset="0%")
          stop(stop-color="#8BA4F9" offset="100%")
        linearGradient(id="gradient3")
          stop(stop-color="#6FCF97" offset="0%")
          stop(stop-color="#66D2EA" offset="100%")
        linearGradient(id="gradient4")
          stop(stop-color="#FFE39C" offset="0%")
          stop(stop-color="#FFBA9C" offset="100%")

      circle(cx="17" cy="17" r="15.91549430918954" fill="transparent")

      - let defaultDashOffset = 25
      - let length = 0
      each piece in config.pieces
        - let pieceSize = piece.value / config.totalNumber * 100 - 1;
        - let dashArray = `${pieceSize} ${100 - pieceSize}`
        - let dashOffset = defaultDashOffset - length
        - length += pieceSize + 1
        if (piece.value != 0)
          circle(cx="17" cy="17" r="15.91549430918954" fill="transparent" stroke=piece.color stroke-width="1" stroke-dasharray=dashArray stroke-dashoffset=dashOffset)
      
      g.donut-chart__total
        text.donut-chart__total-number(x="50%", y="50%") #{config.totalNumber}
        text.donut-chart__total-text(x="50%", y="50%") #{config.vocabulary.totalText}
        
    .donut-chart__description
      each piece in config.pieces
        .donut-chart__description-line
          .donut-chart__description-color(style=`background: ${piece.colorHex}`)
          p.donut-chart__description-label #{piece.label}